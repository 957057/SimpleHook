package me.simpleHook.hook

import com.google.gson.Gson
import me.simpleHook.util.LanguageUtils

object Tip {
    private const val chineseTip =
        "{ \"text\": \"文本：\", \"button\": \"按钮：\", \"callbackType\": \"回调类名：\", \"viewType\": \"控件类型：\", \"encryptType\": \"类型：加密\", \"rawData\": \"原始数据：\", \"encryptResult\": \"加密结果：\", \"decryptResult\": \"解密结果：\", \"key\": \"密钥：\", \"keyAlgorithm\": \"密钥算法：\", \"encrypt\": \"加密\", \"decrypt\": \"解密\", \"isDecrypt\": \"加密/解密：解密\", \"isEncrypt\": \"加密/解密：加密\", \"getConfigSuccessRoot\": \"从[/data/local/tmp/simpleHook/packageName/config/config.json]获取自定义配置成功\", \"getConfigSuccessData\": \"从[/storage/emulated/0/Android/data/packageName/simpleHook/config/config.json]获取自定义配置成功\", \"getConfigSuccessDB\": \"从数据库获取自定义配置成功\", \"failedGetConfigRoot\": \"从[/data/local/tmp/simpleHook/packageName/config/config.json]获取自定义配置失败\", \"failedGetConfigData\": \"从[/storage/emulated/0/Android/data/packageName/simpleHook/config/config.json]获取自定义配置失败\", \"failedGetConfigDB\": \"从数据库文件获取自定义配置失败\", \"getExtensionConfigSuccessRoot\": \"从[/data/local/tmp/simpleHook/packageName/config/assistConfig.json]获取扩展配置成功\", \"getExtensionConfigSuccessData\": \"从[/storage/emulated/0/Android/data/packageName/simpleHook/config/assistConfig.json]获取扩展配置成功\", \"getExtensionConfigSuccessDB\": \"从数据库获取扩展配置成功\", \"failedGetExtensionConfigRoot\": \"从[/data/local/tmp/simpleHook/packageName/config/assistConfig.json]获取扩展配置失败\", \"failedGetExtensionConfigData\": \"从[/storage/emulated/0/Android/data/packageName/simpleHook/config/assistConfig.json]获取扩展配置失败\", \"failedGetExtensionConfigDB\": \"从数据库文件获取扩展配置失败\", \"className\": \"类名：\", \"methodName\": \"方法名：\", \"param\": \"参数\", \"returnValue\": \"返回值：\", \"startCustomHook\": \"开始自定义Hook\", \"startExtensionHook\": \"开始扩展Hook\", \"errorType\": \"错误类型：\", \"solution\": \"解决方案：\", \"filledClassName\": \"所填类名：\", \"filledMethodParams\": \"所填方法（参数）：\", \"filledMethodOrField\": \"所填方法（参数）|变量： \", \"detailReason\": \"具体原因：\", \"notFoundClass\": \"请确保填写的类名正确\", \"noSuchMethod\": \"请确保填写的方法名/参数等数据正确\", \"paramsNotEqualValues\": \"请查看修改值个数是否与参数个数相同\", \"useSmali2Config\": \"你的方法/参数/类名填写有问题，请使用【smali转配置】来降低出错的概率\", \"useNormalVersion\": \"请注意，你的机型并不适合使用ROOT版，请使用普通版\", \"notHaveParams\": \"参数：这个方法没有参数！\", \"unknownError\": \"未知错误\", \"encryptOrDecrypt\": \"加密/解密：\", \"result\": \"结果：\", \"filterClipboard\": \"过滤剪贴板\", \"clipboardInfo\": \"信息：\", \"fieldName\": \"变量名：\", \"fieldValue\": \"变量值：\", \"applicationName\": \"Application入口名：\" }"
    private const val englishTip =
        "{ \"text\": \"Text: \", \"button\": \"Button: \", \"callbackType\": \"callbackType: \", \"viewType\": \"viewType: \", \"encryptType\": \"Type: encrypt\", \"rawData\": \"Raw Data: \", \"encryptResult\": \"Encrypt result: \", \"decryptResult\": \"Decrypt result: \", \"key\": \"Key: \", \"keyAlgorithm\": \"Key algorithm: \", \"encrypt\": \"encrypt\", \"decrypt\": \"decrypt\", \"isDecrypt\": \"Encrypt/Decrypt: decrypt\", \"isEncrypt\": \"Encrypt/Decrypt: encrypt\", \"getConfigSuccessRoot\": \"Getting custom configuration from [/data/local/tmp/simpleHook/packageName/config/config.json] succeeded\", \"getConfigSuccessData\": \"Getting custom configuration from [/storage/emulated/0/Android/data/packageName/simpleHook/config/config.json] succeeded\", \"getConfigSuccessDB\": \"Getting custom configuration from database succeeded\", \"failedGetConfigRoot\": \"Failed to get custom configuration from [/data/local/tmp/simpleHook/packageName/config/config.json]\", \"failedGetConfigData\": \"Failed to get custom configuration from [/storage/emulated/0/Android/data/packageName/simpleHook/config/config.json]\", \"failedGetConfigDB\": \"Failed to get custom configuration from database file\", \"getExtensionConfigSuccessRoot\": \"Getting extension configuration from [/data/local/tmp/simpleHook/packageName/config/assistConfig.json] succeeded\", \"getExtensionConfigSuccessData\": \"Getting extension configuration from [/storage/emulated/0/Android/data/packageName/simpleHook/config/assistConfig.json] succeeded\", \"getExtensionConfigSuccessDB\": \"Getting extension configuration from database succeeded\", \"failedGetExtensionConfigRoot\": \"Failed to get extension configuration from [/data/local/tmp/simpleHook/packageName/config/assistConfig.json]\", \"failedGetExtensionConfigData\": \"Failed to get extension configuration from [/storage/emulated/0/Android/data/packageName/simpleHook/config/assistConfig.json]\", \"failedGetExtensionConfigDB\": \"Failed to get extension configuration from database file\", \"className\": \"Class name: \", \"methodName\": \"Method name: \", \"param\": \"Param\", \"returnValue\": \"Return value: \", \"startCustomHook\": \"Start custom hook\", \"startExtensionHook\": \"start extension hook\", \"errorType\": \"Error type: \", \"solution\": \"Solution: \", \"filledClassName\": \"Filled class name: \", \"filledMethodParams\": \"Filled method (parameters): \", \"filledMethodOrField\": \"Filled method(parameters)|Field: \", \"detailReason\": \"Detail reason: \", \"notFoundClass\": \"Please make sure the class name is correct\", \"noSuchMethod\": \"Please make sure that the method name/parameters and other data filled in are correct\", \"paramsNotEqualValues\": \"Please check whether the number of modified values is the same as the number of parameters\", \"useSmali2Config\": \"There is a problem with filling in your method/parameter/class name, please use [smali to config] to reduce the probability of errors\", \"useNormalVersion\": \"Please note that your model is not suitable for the ROOT version, please use the normal version\", \"notHaveParams\": \"Parameters: This method has no parameters!\", \"unknownError\": \"Unknown error\", \"encryptOrDecrypt\": \"Encrypt/Decrypt: \", \"result\": \"result: \", \"filterClipboard\": \"Filter clipboard\", \"clipboardInfo\": \"Info: \", \"fieldName\": \"Field name: \", \"fieldValue\": \"Field value: \", \"applicationName\": \"Application name：\" }"
    private val tipMap = Gson().fromJson<Map<String, String>>(chineseTip, Map::class.java)
    private val tipEnglishMap = Gson().fromJson<Map<String, String>>(englishTip, Map::class.java)
    private val isNotChinese = LanguageUtils.isNotChinese()

    fun getTip(key: String): String {
        return if (isNotChinese) {
            tipEnglishMap[key] ?: key
        } else {
            tipMap[key] ?: key
        }
    }
}

